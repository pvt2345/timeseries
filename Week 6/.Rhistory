cls
clc
clear()
clc()
cls()
setwd("D:/Study/Time Series/Week 6")
library(astsa)
data = read.csv('monthly-milk-production-pounds-p.csv')
Milk = data$Pounds
#data__ = ts(diff(diff(data$Pounds), 12)) #1 nonss, 1 ss
data__ = diff(diff(milk), 12)
plot(data__)
acf(data__)
pacf(data__)
milk = ts(data$Pounds) #keep original
#data__ = ts(diff(diff(data$Pounds), 12)) #1 nonss, 1 ss
data__ = diff(diff(milk), 12)
plot(data__)
acf(data__)
plot(data__)
acf(data__)
acf(data__, lag.max = 50) #
pacf(data__)
acf(data__, lag.max = 50) #MA(1) SMA(1)
d = 1
D = 1
for (p in 1:2){
for (p in 1:2){
for(q in 1:2){
for(i in 1:2){
for(j in 1:2){
if(p+d+q+i+D+j<=10){
model<-arima(x=milk, order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per))
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=', model$aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
}
a
afs
}
for (p in 1:2){
for(q in 1:2){
for(i in 1:2){
for(j in 1:2){
if(p+d+q+i+D+j<=10){
model<-arima(x=milk, order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per))
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=', model$aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
}
per = 12
for (p in 1:2){
for(q in 1:2){
for(i in 1:2){
for(j in 1:2){
if(p+d+q+i+D+j<=10){
model<-arima(x=milk, order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per))
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=', model$aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
}
sarima(milk, 1, 1, 0, 0 ,1, 1, 12)
sarima(milk, 1, 1, 0, 0 ,1, 1, 12)
model<- arima(x=milk, order = c(1,1,0), seasonal = list(order=c(0,1,1), period=12))
plot(forecast(model))
library(forecas)
library(forecast)
install.packages("forecast")
library(forecast)
model<- arima(x=milk, order = c(1,1,0), seasonal = list(order=c(0,1,1), period=12))
plot(forecast(model))
forecast(model)
plot(USAccDeaths)
plot(data)
plot(data)
data = diff(USAccDeaths, 12)
plot(data)
data = diff(diff(USAccDeaths), 12)
plot(data)
plot(data)
par(mfrow=c(2,1))
acf(data)
pacf(data)
acf(data, lag.max = 50)
pacf(data, lag.max = 50) #q = 1, Q = 1
d =1
D =1
per = 12
for(p in 1:2){
for(q in 1:2){
for(i in 1:2){
for(j in 1:2){
if(p+d+q+i+D+j<=10){
model<-arima(x=USAccDeaths, order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per))
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=', model$aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
}
sarima(USAccDeaths, 0, 1, 1, 0, 1, 1, 12)
sarima.for(USAccDeaths, 0, 1, 1, 0, 1, 1, 12)
plot(USAccDeaths)
sarima.for(USAccDeaths, 0, 1, 1, 0, 1, 1, 12)
sarima.for(USAccDeaths, 0, 1, 1, 0, 1, 1, 12, 1979)
sarima.for(USAccDeaths, 1979, 0, 1, 1, 0, 1, 1, 12)
sarima.for(USAccDeaths, 3, 0, 1, 1, 0, 1, 1, 12)
data = diff(USAccDeaths, 12)
plot(data)
data = diff(diff(USAccDeaths), 12)
plot(data)
par(mfrow=c(2,1))
acf(data, lag.max = 50) #q = 1, Q = 1
pacf(data, lag.max = 50) #p = 1, P = 1
library(astsa)
library(forecast)
install.packages("forecast")
library(forecast)
data = read.csv("CafeF.HSX.Upto16.11.2018.csv")
VCF = data[data$X.Ticker. == "VCF",]
VCF_High = VCF$X.High.
VCF_Low = VCF$X.Low.
VCF_Close = VCF$X.Close.
VCF_Open = VCF$X.Low.
ts_VCF_Close = ts(VCF_Close)
plot(diff(ts_VCF_Close))
diff_ts_VCF_Close = diff(diff(ts_VCF_Close), 90)
plot(diff_ts_VCF_Close)
plot(log(diff_ts_VCF_Close))
plot(diff_ts_VCF_Close)
acf(diff_ts_VCF_Close, lag.max = 100)$acf #SMA 90, MA <= 1, SMA <=1
pacf(diff_ts_VCF_Close, lag.max = 100) #pacf 90, AR <= 6, SAR <=1
acf(diff_ts_VCF_Close, lag.max = 100)$acf #SMA 90, MA <= 1, SMA <=1
pacf(diff_ts_VCF_Close, lag.max = 100) #pacf 90, AR <= 6, SAR <=1
auto.arima(ts_VCF_Close[1:1316],d=1,D=1,xreg=1:1316,max.p=6, max.q=1, max.P = 1, max.Q = 1,
seasonal=TRUE,stepwise=FALSE,approximation = TRUE,ic=("aic"),parallel=TRUE)
model = sarima(ts_VCF_Close, 1,1,1,0,0,0,90)
model = sarima(ts_VCF_Close, 6,1,1,0,1,1,90)
library(astsa)
library(forecast)
data = read.csv('monthly-milk-production-pounds-p.csv')
Milk = data$Pounds
milk = ts(data$Pounds) #keep original
plot(milk)
par(mfrow=c(2,1))
acf(milk)
pacf(milk)
data_ = diff(milk) # take 1 differencing
plot(data_)
par(mfrow=c(2,1))
acf(data_)
pacf(data_)
#data__ = ts(diff(diff(data$Pounds), 12)) #1 nonss, 1 ss
data__ = diff(diff(milk), 12)
library(forecast)
data = read.csv('monthly-milk-production-pounds-p.csv')
#data__ = ts(diff(diff(data$Pounds), 12)) #1 nonss, 1 ss
data__ = diff(diff(milk), 12)
plot(data__)
acf(data__, lag.max = 50) #MA(1) SMA(1) q = 1, Q = 1
pacf(data__)  #AR(1) SAR(1)   p = 1, P = 1
acf(data__, lag.max = 50) #MA(1) SMA(1) q = 1, Q = 1
d = 1
D = 1
per = 12
n = length(ts_VCF_Close)
for (p in 1:2){
for(q in 1:2){
for(i in 1:2){
for(j in 1:2){
if(p+d+q+i+D+j<=10){
model<-arima(x=milk, order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per))
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
aic = log(sse/n) + (n + 2*(p + d + q + i + D + j - 4))/n
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=', aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
}
sarima(milk, 1, 1, 0, 0 ,1, 1, 12)
model<- arima(x=milk, order = c(1,1,0), seasonal = list(order=c(0,1,1), period=12))
plot(forecast(model))
100/60
100//60
100 div t60
100 div 60
round(100/60)
library(astsa)
library(forecast)
data = read.csv("CafeF.HSX.Upto16.11.2018.csv")
data[data$X.Ticker. == "VCB"]
data[data$X.Ticker. == "VCB"]
VCB = data[data$X.Ticker. == "VCB",]
VCB_High = VCB$X.High.
VCB_Low = VCB$X.Low.
VCB_Close = VCB$X.Close.
VCB_Open = VCB$X.Low.
ts_VCB_Close = ts(VCB_Close)
plot(diff(ts_VCB_Close))
plot(ts_VCB_Close)
data = read.csv("CafeF.HSX.Upto16.11.2018.csv")
VNM = data[data$X.Ticker. == "VNM",]
VNM_High = VNM$X.High.
VNM_Low = VNM$X.Low.
VNM_Close = VNM$X.Close.
VNM_Open = VNM$X.Low.
ts_VNM_Close = ts(VNM_Close)
plot(ts_VNM_Close)
VCF = data[data$X.Ticker. == "VCF",]
VCF_High = VCF$X.High.
VTF = data[data$X.Ticker. == "VTF",]
VTF_High = VTF$X.High.
VTF_Low = VTF$X.Low.
VTF_Close = VTF$X.Close.
VTF_Open = VTF$X.Low.
ts_VTF_Close = ts(VTF_Close)
plot(ts_VTF_Close)
plot(diff(ts_VTF_Close))
plot(log(diff(ts_VTF_Close))
plot(log(diff(ts_VTF_Close)))
plot(log(diff(ts_VTF_Close)))
plot(diff(ts_VTF_Close))
diff_ts_VTF_Close = diff(diff(ts_VTF_Close), 90)
plot(diff_ts_VTF_Close)
plot(diff(log(ts_VTF_Close)))
plot(log(ts_VTF_Close))
plot(diff(log(ts_VTF_Close)))
ts_VTF_Close = log(ts_VTF_Close)
source('D:/20181/Time Series/Week 6/Test.R', echo=TRUE)
plot(ts_VTF_Close)
plot(diff(ts_VTF_Close))
diff_ts_VTF_Close = diff(diff(ts_VTF_Close), 90)
plot(diff_ts_VTF_Close)
acf(diff_ts_VTF_Close, lag.max = 100)$acf #SMA 90, MA <= 1, SMA <=1
pacf(diff_ts_VTF_Close, lag.max = 100) #pacf 90, AR <= 6, SAR <=1
ts_VTF_Close = ts(VTF_Close)
ts_VTF_Close = log(ts_VTF_Close)
plot(ts_VTF_Close)
plot(diff(ts_VTF_Close))
diff_ts_VTF_Close = diff(ts_VTF_Close)
plot(diff_ts_VTF_Close)
plot(diff(ts_VTF_Close))
acf(diff_ts_VTF_Close, lag.max = 100)$acf #SMA 90, MA <= 1, SMA <=1
pacf(diff_ts_VTF_Close, lag.max = 100) #pacf 90, AR <= 6, SAR <=1
#diff_ts_VTF_Close = diff(diff(ts_VTF_Close), 90)
Box.test(diff_ts_VTF_Close)
acf(diff_ts_VTF_Close, lag.max = 100)$acf #SMA 90, MA <= 1, SMA <=1
pacf(diff_ts_VTF_Close, lag.max = 100) #pacf 90, AR <= 6, SAR <=1
diff_ts_VTF_Close = diff(diff(ts_VTF_Close), 30)
Box.test(diff_ts_VTF_Close)
plot(diff_ts_VTF_Close)
acf(diff_ts_VTF_Close, lag.max = 100)$acf #SMA 90, MA <= 1, SMA <=1
pacf(diff_ts_VTF_Close, lag.max = 100) #pacf 90, AR <= 3, SAR <=1
acf(diff_ts_VTF_Close, lag.max = 100)$acf #SMA 90, MA <= 1, SMA <=1
pacf(diff_ts_VTF_Close, lag.max = 100) #pacf 90, AR <= 3, SAR <=1
d = 1
D = 1
per = 30
pacf(diff_ts_VTF_Close, lag.max = 130) #pacf 90, AR <= 3, SAR <=1
for (p in 1:2){
for(q in 1:2){
for(i in 1:2){
for(j in 1:2){
model<-arima(x=ts_VTF_Close[1:n], order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per), optim.control = )
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
#aic = log(sse/n) + (n + 2*(p + d + q + i + D + j - 4))/n
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=',model$aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
diff_ts_VTF_Close = diff(diff(ts_VTF_Close), 30)
Box.test(diff_ts_VTF_Close)
plot(diff_ts_VTF_Close)
plot(USAccDeaths)
data = diff(USAccDeaths, 12)
plot(data)
data = diff(diff(USAccDeaths), 12)
plot(data)
par(mfrow=c(2,1))
acf(data, lag.max = 50) #q = 1, Q = 1
pacf(data, lag.max = 50) #p = 1, P = 1
pacf(diff_ts_VTF_Close, lag.max = 1000) #pacf 90, AR <= 3, SAR <=1
for (p in 1:2){
for(q in 1:2){
for(i in 1:5){
for(j in 1:2){
model<-arima(x=ts_VTF_Close[1:n], order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per), optim.control = )
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
#aic = log(sse/n) + (n + 2*(p + d + q + i + D + j - 4))/n
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=',model$aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
for (p in 1:2){
for(q in 1:2){
for(i in 1:5){
for(j in 1:2){
model<-arima(x=ts_VTF_Close[1:n], order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per), method = "CSS")
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
#aic = log(sse/n) + (n + 2*(p + d + q + i + D + j - 4))/n
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=',model$aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
auto.arima(ts_VTF_Close,d=1,D=1,max.p=1, max.q=1, max.P = 4, max.Q = 1,
seasonal=TRUE,stepwise=FALSE,approximation = TRUE,ic=("aic"),parallel=TRUE)
for (p in 1:2){
for(q in 1:2){
for(i in 1:5){
for(j in 1:2){
model<-arima(x=ts_VTF_Close[1:n], order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per), method = "CSS")
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
aic = log(sse/n) + (n + 2*(p + d + q + i + D + j - 4))/n
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=',aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
model = sarima(ts_VTF_Close, 1,1,1,4,1,1,30)
model = sarima(ts_VTF_Close, 1,1,1,4,1,1,30, method = "CSS")
model = sarima(ts_VTF_Close, 1,1,1,4,1,1,30)
optim(hessian = FALSE)
for (p in 1:2){
for(q in 1:2){
for(i in 1:5){
for(j in 1:2){
model<-arima(x=ts_VTF_Close[1:n], order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per), optim.method=
"Nelder-Mead")
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
aic = log(sse/n) + (n + 2*(p + d + q + i + D + j - 4))/n
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=',aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
for (p in 1:2){
for(q in 1:2){
for(i in 1:5){
for(j in 1:2){
model<-arima(x=ts_VTF_Close[1:n], order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per), optim.method=
"Brent")
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
aic = log(sse/n) + (n + 2*(p + d + q + i + D + j - 4))/n
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=',aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
for (p in 1:2){
for(q in 1:2){
for(i in 1:5){
for(j in 1:2){
model<-arima(x=ts_VTF_Close[1:n], order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per), optim.method=
"BFGS")
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
aic = log(sse/n) + (n + 2*(p + d + q + i + D + j - 4))/n
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=',aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
for (p in 1:2){
for(q in 1:2){
for(i in 1:5){
for(j in 1:2){
model<-arima(x=ts_VTF_Close[1:n], order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per), optim.method=
"BFGS", optim.control = (hessian=FALSE))
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
aic = log(sse/n) + (n + 2*(p + d + q + i + D + j - 4))/n
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=',aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
warnings()
for (p in 1:2){
for(q in 1:2){
for(i in 1:5){
for(j in 1:2){
model<-arima(x=ts_VTF_Close[1:n], order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per), optim.method=
"BFGS", optim$hessian = FALSE)
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
#aic = log(sse/n) + (n + 2*(p + d + q + i + D + j - 4))/n
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=',aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
for (p in 1:2){
for(q in 1:2){
for(i in 1:5){
for(j in 1:2){
model<-arima(x=ts_VTF_Close[1:n], order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per), optim.method=
"BFGS", optim$hessian = FALSE)
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
#aic = log(sse/n) + (n + 2*(p + d + q + i + D + j - 4))/n
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=',aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
for (p in 1:2){
for(q in 1:2){
for(i in 1:5){
for(j in 1:2){
model<-arima(x=ts_VTF_Close[1:n], order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per), optim.method=
"BFGS", optim$hessian = FALSE)
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
#aic = log(sse/n) + (n + 2*(p + d + q + i + D + j - 4))/n
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=',model$aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
d
a
for (p in 1:2){
for(q in 1:2){
for(i in 1:5){
for(j in 1:2){
model<-arima(x=ts_VTF_Close[1:n], order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per), optim.method=
"BFGS", optim$hessian = FALSE)
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
#aic = log(sse/n) + (n + 2*(p + d + q + i + D + j - 4))/n
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=',model$aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
for (p in 1:2){
for(q in 1:2){
for(i in 1:5){
for(j in 1:2){
model<-arima(x=ts_VTF_Close[1:n], order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per), optim.method="BFGS", optim$hessian=FALSE)
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
#aic = log(sse/n) + (n + 2*(p + d + q + i + D + j - 4))/n
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=',model$aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
for (p in 1:2){
for(q in 1:2){
for(i in 1:5){
for(j in 1:2){
model<-arima(x=ts_VTF_Close[1:n], order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per), optim.method="BFGS")
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
#aic = log(sse/n) + (n + 2*(p + d + q + i + D + j - 4))/n
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=',model$aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
for (p in 1:2){
for(q in 1:2){
for(i in 1:3){
for(j in 1:2){
model<-arima(x=ts_VTF_Close[1:n], order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per), optim.method="BFGS")
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
#aic = log(sse/n) + (n + 2*(p + d + q + i + D + j - 4))/n
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=',model$aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
for (p in 1:2){
for(q in 1:2){
for(i in 1:2){
for(j in 1:2){
model<-arima(x=ts_VTF_Close[1:n], order = c((p-1),d,(q-1)), seasonal = list(order=c((i-1),D,(j-1)), period=per), optim.method="BFGS")
pval<-Box.test(model$residuals, lag=log(length(model$residuals)))
sse<-sum(model$residuals^2)
#aic = log(sse/n) + (n + 2*(p + d + q + i + D + j - 4))/n
cat(p-1,d,q-1,i-1,D,j-1,per, 'AIC=',model$aic, ' SSE=',sse,' p-VALUE=', pval$p.value,'\n')
}
}
}
}
